
/*
Auto-generated by CVXPYgen on March 01, 2024 at 10:36:37.
Content: Declarations for Python binding with pybind11.
*/

// User-defined parameters
struct CPG_Params_cpp_t {
    double max_velocity;
    double max_effort;
    std::array<double, 36> A;
    std::array<double, 18> B;
    std::array<double, 6> x_init;
    std::array<double, 6> x_target;
};

// Flags for updated user-defined parameters
struct CPG_Updated_cpp_t {
    bool max_velocity;
    bool max_effort;
    bool A;
    bool B;
    bool x_init;
    bool x_target;
};

// Primal solution
struct CPG_Prim_cpp_t {
    std::array<double, 30> U;
    std::array<double, 66> X;
};

// Dual solution
struct CPG_Dual_cpp_t {
    std::array<double, 33> d0;
    std::array<double, 30> d1;
    std::array<double, 6> d2;
    std::array<double, 6> d3;
    std::array<double, 6> d4;
    std::array<double, 6> d5;
    std::array<double, 6> d6;
    std::array<double, 6> d7;
    std::array<double, 6> d8;
    std::array<double, 6> d9;
    std::array<double, 6> d10;
    std::array<double, 6> d11;
    std::array<double, 6> d12;
    std::array<double, 6> d13;
};

// Solver information
struct CPG_Info_cpp_t {
    double obj_val;
    int iter;
    char* status;
    double pri_res;
    double dua_res;
    double time;
};

// Solution and solver information
struct CPG_Result_cpp_t {
    CPG_Prim_cpp_t prim;
    CPG_Dual_cpp_t dual;
    CPG_Info_cpp_t info;
};

// Main solve function
CPG_Result_cpp_t solve_cpp(struct CPG_Updated_cpp_t& CPG_Updated_cpp, struct CPG_Params_cpp_t& CPG_Params_cpp);
